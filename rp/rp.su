CLASS AdresZamieszkaniaWidget

// Widget wyświetlający formularz edycji adresu zamieszkania

	FUN new(uiElement, userProfileModel)
		@.uiElement = uiElement
		@.userProfileModel = userProfileModel

	METHOD show()
		uiElement.bind(‘formularzEdycjiAdresuZamieszkania’)
		FUN onSave()
			@.userProfileModel.submit(‘adresZamieszkania’, uiElement.getFormData())
		uiElement.onFormSave(onSave)


CLASS AdresAlternatywnyWidget

// Widget wyświetlający formularz edycji adresu alternatywnego

	FUN new(uiElement, userProfileModel, adresWysylaniaKorespondencjiWidget)
		@.uiElement = uiElement
		@.userProfileModel = userProfileModel
		@.adresWysylaniaKorespondencjiWidget = adresWysylaniaKorespondencjiWidget

	METHOD show()
		uiElement.bind(‘formularzEdycjiAdresuAlternatywnego’)
		FUN onSave()
			@.userProfileModel.submit(‘adresAlternatywny’, uiElement.getFormData())
		uiElement.onFormSave(onSave)
// When form is saved update adres wysylania korespondencji widget
		FUN onSaved(newAdresAlter)
			@.adresWysylaniaKorespondencjiWidget.updateData(newAdresAlter)
		uiElement.onFormSaved(onSaved)

CLASS AdresWysylaniaKorespondencjiWidget

// Widget informujący o adresie do wysyłania korespondencji
	
	FUN new(uiElement, userProfileModel)
		@.uiElement = uiElement
		@.userProfileModel = userProfileModel

	METHOD show()
		adres = @.userProfileModel.getAdresZamieszkania()
		IF adres.empty()
			adres = @.userProfileModel.getAdresKorespondencji()
		@.uiElement.bind(‘adresWysylaniaKoresp’).update(‘adres’, adres)

	METHOD updateData(newAdresAlter)
		@.uiElement.bind(‘adresWysylaniaKoresp’).update(‘adres’, newAdresAlter)


